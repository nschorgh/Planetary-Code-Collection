Log of major changes (goes back to times before git version control)
---------------------------------------------------------------------

Apr 2025: Release v1.2.3

May 2024: The thermal model is now also described in a paper by Schorghofer & Khatiwala (2024). The model is 20+ years old, but a new Volterra predictor step has been added, which makes it even better.

29 Jan 2024: Release v1.2.2  doi:10.5281/zenodo.10583245

2 Jan 2024: Added Volterra predictor to conductionQ. (This is a long story.)

28 Dec 2023: Shifted lower boundary condition for thermal solver by half a layer.

12 May 2023: Release v1.2.1  doi:10.5281/zenodo.7931987

30 Dec 2022: Release v1.2.0  doi:10.5281/zenodo.7495755
First release without MSIM

19 May 2022: Moved MSIM out of PCC

27 Apr 2022: Release v1.1.9  DOI:10.5281/zenodo.6499678
Last release that includes MSIM. MSIM now has its own repository, and future releases of the Planetary-Code-Collection will no longer include MSIM.

26 Dec 2021: Release v1.1.8  doi:10.5281/zenodo.5805461

14 Sep 2021: core of view factor calculations redone in cartesian rather than spherical coordinates

8 Sep 2021: added truncated SVD as method to calculate approximate terrain irradiance

4 Apr 2021: added Matlab versions of the Crank-Nicolson solvers conductionT/Q

Mar 2021: added Python versions of the Crank-Nicolson solvers conductionT/Q

Jan 2021: added mars_mapii, which has the same functionality as mars_mapi, but uses simple iterations to calculate the equilibrium ice table depth instead of the bisection method. Both use the thermal model in jsub.

Jan 2021: replaced many array allocations of static length NMAX with user-defined length NZ.

18 Jul 2020: Release v1.1.7  doi:10.5281/zenodo.3951242

10 Jul 2020: merged psv + psv2 + psv3, and changed default parameterization to psv2.

2 Jul 2020: renamed Exosphere/ into Exospheres/

29 Jun 2020: added basic lunar ice pump code to Lunar/. Lunar/ is a new directory that will contain miscellaneous model code for the Moon. The lunar exosphere model will stay in Exosphere/ and the 3D terrain irradiance model will stay in Topo3D/.

21 Jun 2020: added subl_h2o

27 May 2020: changed psv3, added psv2 (parametrizations for saturation vapor pressure)

22 May 2020: added patm as input to Mars/jsubv; changed default hemispheric Tco2frost temperatures

May 2020: Re-calculated mean annual surface temperatures on Mars over 21 Myr and added them to the archive under Mars/MilankOutput/

16 May 2020: flux -> flux_mars77 in jsubv. This was the last occurrence of the function flux, and the legendary function flux was removed from the collection. It is superseded by subroutine mars_flux2, which provides a consistent treatment of the sky irradiance for an obstructed sky. For horizontal and unobstructed ground flux_mars77 can be used.

In this process, I realized that different parts of the program collection used different conventions for the slope orientation. In functions flux and flux_noatm, zero slope azimuth meant north-facing; in flux_mars2 and flux_wshad zero slope azimuth meant south-facing. With function flux gone, the convention in flux_noatm was changed. Now zero slope azimuth uniformly means south-facing (the azimuth of the direction of steepest decent).

May 2020: dusted off mars_mapiqh2v, renamed it to mars_mapi2p, and added example output in Test/

24/25 Apr 2020: revised the type of body parameters in fast_modules_asteroid, so asteroid_fast? can be more easily used with other bodies.

14 Apr 2020: dug up analytical solution to heat equation with Stefan-Boltzmann law as boundary condition; added to UserGuide section 1.1. 

28 Feb 2020: added tempr_driver.f90 (was used to make Fig. 3 in my 2008 Milankovitch paper)

16 Jan 2020: added makegaussian.c

31 Dec 2019: Topo3D/ changed grid downsampling from 4 neighbors to 8 neighbors

30 Nov 2019: added Armand distribution as option for initial velocities in Exosphere/montecarlo.f90

22 Oct 2019: flux -> flux_mars77  in jsub, mars_mapi, mars_mapt2, and fast_subs_mars
Functions flux and flux_mars77 do not return the exact same results, because in flux_mars77 the atmospheric short-wavelength scattered irradiance is multiplied with (1-albedo).

21 Oct 2019: Added Mars/Tests/

12 Oct 2019: Release v1.1.6  doi:10.5281/zenodo.3483924

23 Sep 2019: added C version of conductionQ and its dependencies

20 Sep 2019: The long-used and much-used subroutine conductionQ received an upgrade. It now iterates when the surface temperature, which is the initial value for the linearization of the thermal radiation term, changes too fast. It was also converted from Fortran 77 to Fortran 90 (or Fortran 2008 actually). The old version of conductionQ is still available in release 1.1.5 and all earlier releases. The new version is conductionQ.f90. The change has also been propagated into conductionQ2.f90

Sep 2019: internal restructuring of horizons and viewfactor calculations, without external consequence

30 Aug 2019: changed definition of viewfactor by a factor of pi, so a half-sphere integrates to 1.

Aug 2019: fixed a bug in fieldofview_subs.f90 and redid test case

28 Jun 2019: added two more variants of cratersQ_mars

17 May 2019: Topo3D/  switched from storing subtended angles to storing viewfactors, which saves a factor of cos(v) later and ultimately provides a speedup by a factor of several.

May 2019: Updated parts of Topo3D/Test/ and the agreement with the analytical solution improved

8 May 2019: Release v1.1.5  doi:10.5281/zenodo.2678125

Apr 2019: work in Topo3D/ directory:
readhorizons can now read cropped domains; lots of renaming in the Topo3D/ directory to enhance usability; readdem has moved from topos.f90 to crater_common.f90, because input path is now defined in filemanager.

17 Apr 2019: The last month or so involved code cleanup, especially in the Asteroids/ directory.

3 Mar 2019: minor updates plus a semi-implicit solver for the heat equation in a spherically symmetric geometry in sphere1d_implicit.f90

Sep 2018: most of the code development over the past 14 months was for the 3D surface energy balance model for Mars

Sep 2018: function flux_mars is replaced by subroutine flux_mars2, which returns direct and diffuse irradiances separately

Aug 2018: moved mars-specific subroutines out of grids.f

Feb 2018: recursive implementation of multigrid

7 Feb 2018: added conductionQ2, which is about 1/3 faster than the legendary conductionQ, but limited to time-constant thermal properties

16 Dec 2017: first version of 3D illumination code for Mars

4 Oct 2017: Release v1.1.4  doi:10.5281/zenodo.1001854

24 Aug 2017: gethorizon has been transformed into a module to allow elemental attribute, and thus parallelization

2 Aug 2017: first implementation of multigrid method for horizons calculation

1 Aug 2017: finished subroutine findallhorizon, which replaces findonehorizon in shadows.f90

16 Jul 2017: Release v1.1.3  doi:10.5281/zenodo.830052

20 Oct 2016: Release v1.1.2  doi:10.5281/zenodo.162490

9 Oct 2016: First version of User Guide

3 Apr 2016: Release v1.1.1  doi:10.5281/zenodo.48851

19 Dec 2015: Release v1.1.0  doi:10.5281/zenodo.35566

19 Dec 2015: final version of asynchronous model for ice loss from asteroids

22 Oct 2015: Release v1.0  doi:10.5281/zenodo.32616

Aug 2015: moved to GitHub

9 Jul 2015: restructured lunar exosphere model, so geographic grid can be swapped out

1 Jun 2015: added 3D model of shadowing and illumination (incl. reflection and thermal emission) on planetary surfaces; good enough for small topographies

5 Feb 2015: added lunar Monte Carlo model for exospheric transport of water molecules

3/4 Jun 2014: changed NMAX=2000 to NMAX=1000 almost everywhere

31 May 2014: added a few simple routines for thermal modeling of asteroids

4 Sep 2011: better implementation of "mode 2" ice growth, affecting fast_subs_mars.f90 and fast_subs_univ.f90

25 Aug 2011: generalizations to mars_fast.f90, fast_modules.f90, and fast_subs_mars.f90

20 Jul 2011: technical updates (generalizations) to grids.f, jsub.f, mars_mapt2.f, and mars_mapi.f

28 Mar 2010: updated fast_subs_mars.f90; icelayer_mars has been parallelized, but parallelization is disabled by default; fewer calls to conductionT in ajsub_mars

27 Mar 2010: minor polish of the very old program mars_thermal1d.f

9 Feb 2010: grids.f has an additional subroutine and the default for the parametrization of thermal conductivity has changed.

2 Jan 2010: routines for fast method have been added. Their filenames contain the string fast.

Summer 2009: switched from g95/g77 to gfortran compiler.

31 Oct 2008: added deriv1_onesided to derivs.f90

...
